|10 @Console &vector $2 &read $1 &pad $5 &write $1 &error $1

%DUP8 { STH2 ROT2k ROT2 STH2 SWP2r STH2kr ROT2 STH2 SWP2 ROT2r STH2r STH2r STH2r }


( zero page )
|0000
    @votes [ &yes-high $2 &yes-low $2 &no-high $2 &no-low $2 &invalid-high $2 &invalid-low $2 ]
    @current-view $1


|0100
    reset-votes
    incr-yes
    incr-yes
    load-yes
    print-decimal

BRK

@reset-votes ( -- )
    #0000 DUP2 .votes/yes-high STZ2
    DUP2 .votes/yes-low STZ2
    DUP2 .votes/no-high STZ2
    DUP2 .votes/no-low STZ2
    DUP2 .votes/invalid-high STZ2
    .votes/invalid-low STZ2
JMP2r

@load-yes ( -- long** )
    .votes/yes-high LDZ2
    .votes/yes-low LDZ2
JMP2r

@incr-yes ( -- )
    load-yes #0000 #0001 add32

    .votes/yes-low STZ2
    .votes/yes-high STZ2
JMP2r

@print-decimal ( long** -- )

    #00 ,&z STR
    #3b9a #ca00 ,&parse JSR     ( 1 000 000 000 )
    #05f5 #e100 ,&parse JSR     ( 100 000 000 )
    #0098 #9680 ,&parse JSR     ( 10 000 000 )
    #000f #4240 ,&parse JSR     ( 1 000 000 )
    #0001 #86a0 ,&parse JSR     ( 100 000 )
    #0000 #2710 ,&parse JSR     ( 10 000 )
    #0000 #03e8 ,&parse JSR     ( 1000 )
    #0000 #0064 ,&parse JSR     ( 100 )
    #0000 #000a ,&parse JSR     ( 10 )
    NIP2 NIP
    &emit
        DUP [ LIT &z $1 ] EQU ,&skip JCN
            #ff ,&z STR DUP #30 ADD .Console/write DEO
            &skip
    POP

JMP2r
    &parse
        DUP8 div32 DUP ,&emit JSR mul32 sub32
    JMP2r

~math32.tal
